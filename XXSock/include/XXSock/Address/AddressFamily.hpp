#pragma once

#include <cstdint>

namespace XXSock {
    struct AddressFamily {
    public:
        enum Type : std::uint16_t {
            Unknown = 0,
            Unix = 1,
            IPv4 = 2,
#if (XXSOCK_PLATFORM_ID == XXSOCK_PLATFORM_WINDOWS)
            IMP = 3,
            PUP = 4,
            Chaos = 5,
            XNS = 6,
            IPX = 6,
            SPX = 6,
            ISO = 7,
            OSI = 7,
            ECMA = 8,
            Datakit = 9,
            CCITT = 10,
            SNA = 11,
            DECnet = 12,
            DLI = 13,
            LAT = 14,
            HYPERchannel = 15,
            AppleTalk = 16,
            NetBIOS = 17,
            VoiceView = 18,
            FireFox = 19,
            InUse = 20,
            Banyan = 21,
            ATM = 22,
            IPv6 = 23,
            WolfPack = 24,
            IEEE1284 = 25,
            IrDA = 26,
            NETDES = 28,
            TCNProcess = 29,
            TCNMessage = 30,
            ICLFXBM = 31,
            Bluetooth = 32,
            Link = 33,
            Max = 34,
#elif (XXSOCK_PLATFORM_ID == XXSOCK_PLATFORM_LINUX)
            Local = 1,
            File = 1,
            AX25 = 3,
            IPX = 4,
            AppleTalk = 5,
            NetROM = 6,
            Bridge = 7,
            ATMPVC = 8,
            X25 = 9,
            IPv6 = 10,
            Rose = 11,
            DECnet = 12,
            NETBEUI = 13,
            Security = 14,
            Key = 15,
            NetLink = 16,
            Route = 16,
            Packet = 17,
            Ash = 18,
            Econet = 19,
            ATMSVC = 20,
            RDS = 21,
            SNA = 22,
            IrDA = 23,
            PPPoX = 24,
            Wanpipe = 25,
            LLC = 26,
            CAN = 29,
            TIPC = 30,
            Bluetooth = 31,
            IUVC = 32,
            RXRPC = 33,
            ISDN = 34,
            PHONET = 35,
            IEEE802154 = 36,
            CAIF = 37,
            ALG = 38,
            NFC = 39,
            VSOCK = 40,
            Max = 41,
#elif (XXSOCK_PLATFORM_ID == XXSOCK_PLATFORM_MACOS)
            Local = 2,
            IMP = 3,
            PUP = 4,
            Chaos = 5,
            XNS = 6,
            ISO = 7,
            OSI = 7,
            ECMA = 8,
            Datakit = 9,
            CCITT = 10,
            SNA = 11,
            DECnet = 12,
            DLI = 13,
            LAT = 14,
            HYPERchannel = 15,
            AppleTalk = 16,
            Route = 17,
            Link = 18,
            XTP = 19,
            COIP = 20,
            CNT = 21,
            RTIP = 22,
            IPX = 23,
            SIP = 24,
            PIP = 25,
            BlueBox = 26,
            NDRV = 27,
            ISDN = 28,
            EI64 = 28,
            Key = 29,
            IPv6 = 30,
            ATM = 30,
            NATM = 31,
            System = 32,
            Netgraph = 32,
            NetBIOS = 33,
            PPP = 34,
            HDRCMPLT = 35,
            AFP = 36,
            IEEE80211 = 37,
            Max = 38,
#endif
        };
        AddressFamily(Type type);
        operator Type() const;
        uint16_t ToInt() const;
    private:
        Type _Type;
        template <typename T>
        operator T() const;
    };
}